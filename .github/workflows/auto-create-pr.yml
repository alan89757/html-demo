name: Auto Create and Merge PR from main to feature branch

permissions:
  contents: write  # 需要提升权限以执行合并操作
  pull-requests: write

on:
  push:
    branches:
      - 'feature/**'

jobs:
  create-and-merge-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current branch name
        id: branch_name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Check if main has new commits not in feature branch
        id: check_commits
        run: |
          git fetch origin main
          if git log origin/main --not origin/${{ env.BRANCH_NAME }} --oneline | grep .; then
            echo "HAS_NEW_COMMITS=true" >> $GITHUB_ENV
          else
            echo "HAS_NEW_COMMITS=false" >> $GITHUB_ENV
          fi

      - name: Create Pull Request
        if: env.HAS_NEW_COMMITS == 'true'
        id: create_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ADMIN_PAT  }}
          script: |
            const baseBranch = '${{ env.BRANCH_NAME }}';
            const headBranch = 'main';
            const title = `Merge main into ${baseBranch}`;
            const body = 'This PR is automatically created to merge latest changes from main into feature branch.';

            // Check if PR already exists
            const existingPrs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${headBranch}`,
              base: baseBranch,
              state: 'open'
            });

            let prNumber;
            if (existingPrs.data.length === 0) {
              // Create new PR
              const newPr = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                head: headBranch,
                base: baseBranch
              });
              prNumber = newPr.data.number;
              console.log(`Created PR #${prNumber}: ${title}`);
            } else {
              prNumber = existingPrs.data[0].number;
              console.log(`PR already exists: #${prNumber} - ${existingPrs.data[0].html_url}`);
            }
            
            // 输出PR编号供后续步骤使用
            return { prNumber };

      - name: Auto merge PR if no conflicts
        if: env.HAS_NEW_COMMITS == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ADMIN_PAT  }}
          script: |
            const prNumber = ${{ steps.create_pr.outputs.result }}.prNumber;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // 检查PR状态
            const pr = await github.rest.pulls.get({ owner, repo, pull_number: prNumber });
            
            // 只有当PR没有冲突且状态为可合并时才执行合并
            if (pr.data.mergeable && !pr.data.merged) {
              console.log(`Merging PR #${prNumber} automatically (no conflicts)`);
              await github.rest.pulls.merge({
                owner,
                repo,
                pull_number: prNumber,
                merge_method: 'merge'  // 可选项: merge, squash, rebase
              });
            } else if (pr.data.merged) {
              console.log(`PR #${prNumber} is already merged`);
            } else {
              console.log(`PR #${prNumber} has conflicts or is not mergeable, skipping auto-merge`);
            }